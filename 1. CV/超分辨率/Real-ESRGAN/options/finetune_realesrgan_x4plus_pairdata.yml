# name: finetune_模型名称_数据集描述_数据集中是否有大量重复数据_权重文件是基于上一轮的什么训练_基于哪个权重文件_本轮训练多少iter_更改了哪个超参数
name: 21_finetune_RealESRGANx4plusPairedData_psnr15Mixed_DupulicateNo_BaseOn20timeRegionOnly_iter10K.pth_10k_glr4e-5_dlr4e-5
model_type: RealESRGANModel
scale: 4
num_gpu: auto
manual_seed: 0

# USM the ground-truth
l1_gt_usm: True
percep_gt_usm: True
gan_gt_usm: False

high_order_degradation: False # do not use the high-order degradation generation process

# dataset and data loader settings
datasets:
  train:
    name: landsea
    type: RealESRGANPairedDataset
    dataroot_gt: /root/work/real-esrgan/train/datasets/landsea/train
    dataroot_lq: /root/work/real-esrgan/train/datasets/landsea/train
    meta_info: /root/work/real-esrgan/train/datasets/landsea/meta_info/meta_info_landsea.txt
    io_backend:
      type: disk

    gt_size: 256
    use_hflip: True
    use_rot: True

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 12
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

#  # Uncomment these for validation
#  val:
#    name: validation
#    type: PairedImageDataset
#    dataroot_gt: /root/work/real-esrgan/train/datasets/landsea/val/hr
#    dataroot_lq: /root/work/real-esrgan/train/datasets/landsea/val/lr
#    io_backend:
#      type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  num_grow_ch: 32

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: /root/work/real-esrgan/train/experiments/pretrained_models/net_g_10000.pth
  param_key_g: params_ema
  strict_load_g: true
  pretrain_network_d: /root/work/real-esrgan/train/experiments/pretrained_models/net_d_10000.pth
  param_key_d: params
  strict_load_d: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 4e-5
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 4e-5
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [400000]
    gamma: 0.5

  total_iter: 10000
  warmup_iter: -1 # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l1
  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1

  net_d_iters: 1
  net_d_init_iters: 0

# Uncomment these for validation
# validation settings
#val:
#  val_freq: !!float 1000
#  # 每次验证时将验证集超分的结果保存
#  save_img: True
#  pbar: True
#
#  metrics:
#    psnr: # metric name
#      type: calculate_psnr
#      # 在做psnr计算的时候是否是去掉图像边缘一圈的部分
#      crop_border: 4
#      test_y_channel: false

# logging settings
logger:
  print_freq: 10
  # 每隔多少个iter保存一次权重文件
  save_checkpoint_freq: !!float 5e2
  # 是否使用tensorboard
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
